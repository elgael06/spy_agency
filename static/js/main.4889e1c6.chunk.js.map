{"version":3,"sources":["features/login/loginAPI.js","features/login/loginSlice.js","features/login/components/layout-login.js","features/login/Login.js","features/login/create-account.js","features/login/login.router.js","features/home/home.js","features/home/home.router.js","components/layout-private/Components/menu-private.js","components/header-app/header-app.js","components/layout-private/layout-private.js","app/Routers/index.router.js","App.js","features/counter/counterAPI.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["singInUserApi","a","email","password","axios","post","catch","status","data","console","log","defaults","headers","token","get","put","delete","singInUser","createAsyncThunk","loginSlice","createSlice","name","initialState","sesion","loading","reducers","handleEmail","state","action","payload","handlePassword","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","selectLogin","login","selectSesion","Header","Layout","Content","Footer","LayoutLogin","title","children","handleSubmit","style","color","display","textAlign","justifyContent","alignItems","marginTop","minHeight","width","flexDirection","background","padding","initialValues","remember","labelCol","span","wrapperCol","onSubmitCapture","Login","history","useHistory","useSelector","dispatch","useDispatch","useEffect","e","preventDefault","Item","label","rules","required","message","type","placeholder","value","onChange","target","Password","shape","block","htmlType","onClick","push","CreateAccount","LoginRouter","path","exact","component","to","Home","consultar","id_account","resp","HomeRouter","MenuPrivate","theme","mode","defaultSelectedKeys","icon","UserOutlined","VideoCameraOutlined","UploadOutlined","HeaderApp","collapsed","toggle","className","React","createElement","MenuUnfoldOutlined","MenuFoldOutlined","Sider","LayoutPrivate","useState","setCollapsed","trigger","collapsible","margin","PrivateRoute","PubicRoute","IndexRouter","App","position","left","right","bottom","top","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","response","counterSlice","increment","decrement","incrementByAmount","store","configureStore","reducer","counter","counterReducer","loginReducer","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4889e1c6.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const singInUserApi = async ({\n    email='',\n    password=''\n}) => {\n    const {status,data} = await axios.post('/api/user/account/login',{\n        email,\n        password,\n    }).catch() || {};\n    console.log(status,data);\n    axios.defaults.headers.post['Token'] = data.token;\n    axios.defaults.headers.get['Token'] = data.token;\n    axios.defaults.headers.put['Token'] = data.token;\n    axios.defaults.headers.delete['Token'] = data.token;\n\n    return status==200 ? data : null;\n}","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {singInUserApi} from \"./loginAPI\";\n\nconst initialState = {\n    email:'',\n    password:'',\n    sesion:null,\n    loading:false,\n};\nexport const singInUser = createAsyncThunk(\n    'login/sinIn',\n    async ({email='',password=''})=>{\n        const data = await singInUserApi({email, password});\n        return data;\n    }\n);\nconst loginSlice = createSlice({\n    name:'login',\n    initialState,\n    reducers:{\n        handleEmail:(state,action)=>{\n            state.email = action.payload;\n        },\n        handlePassword:(state,action)=>{\n            state.password = action.payload;\n        },\n    },\n    extraReducers: (builder) => {\n    builder\n      .addCase(singInUser.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(singInUser.fulfilled, (state, action) => {\n         state.loading = false;\n         state.sesion = action.payload;\n      })\n        .addCase(singInUser.rejected,(state)=>{\n            state.loading = false;\n            state.sesion = null;\n        });\n  },\n});\n\nexport const { handleEmail,handlePassword } = loginSlice.actions;\nexport const selectLogin = (state) =>  state.login;\nexport const selectSesion = (state) => state.login.sesion;\nexport  default  loginSlice.reducer;","import React from \"react\";\n\nimport {Divider, Form, Layout} from 'antd';\n\n\nconst { Header, Content, Footer } = Layout;\n\nconst LayoutLogin = ({\n    title='',\n    children=null,\n    handleSubmit=()=>{}\n}) => {\n\n\n    return < >\n        <Header>\n            <h1 style={{color:'#FFF'}}>Login Page Company SPY</h1>\n        </Header>\n\n        <hr />\n        <Content style={{ display:'flex',textAlign:'center',justifyContent:'center', alignItems:'center' }}>\n            <Form\n                style={{\n                    display:'flex',\n                    marginTop:-80,\n                    minHeight:500,\n                    width:450,\n                    justifyContent:'space-between',\n                    flexDirection:'column',\n                    background: '#fff',\n                    padding:'20px 35px'\n                }}\n              name=\"basic\"\n              initialValues={{ remember: false }}\n              labelCol={{ span: 5 }}\n              wrapperCol={{ span: 21 }}\n              onSubmitCapture={handleSubmit}\n            >\n                <div>\n                    <Divider>\n                         <h2>{title}</h2>\n                     </Divider>\n                </div>\n                {children}\n                <hr />\n                <Footer><small>Company SPY</small></Footer>\n            </Form>\n        </Content>\n    </>\n}\n\nexport default  LayoutLogin;","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Form, Input, Button} from 'antd';\nimport {\n    handleEmail,\n    handlePassword,\n    selectLogin,\n    singInUser,\n} from './loginSlice';\nimport LayoutLogin from \"./components/layout-login\";\nimport {useHistory} from \"react-router\";\n\n\nconst Login = () => {\n    const history = useHistory();\n    const { email,password,loading } = useSelector(selectLogin);\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        console.log('login',{ email,password });\n    },[])\n\n    // event\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log('send...');\n        if(email && password){\n            dispatch(singInUser({\n                    email,\n                    password\n                }\n            ))\n        }\n    }\n\n    return <LayoutLogin\n        handleSubmit={handleSubmit}\n        title='Sing In'\n    >\n        {/* email */}\n        <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[{required: true,message: 'Please input your email!'},]}>\n            <Input\n                type='email'\n                placeholder='email...'\n                value={email}\n                onChange={e=>dispatch(handleEmail(e.target.value))}\n            />\n        </Form.Item>\n        {/* password */}\n        <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{required: true,message: 'Please input your password!'},]}>\n            <Input.Password\n                type='password'\n                placeholder='password...'\n                value={password}\n                onChange={e=>dispatch(handlePassword(e.target.value))}\n            />\n        </Form.Item>\n        <Button loading={loading} shape=\"round\" block type=\"primary\" htmlType=\"submit\" >ENTER</Button>\n        <br/>\n\n        <Button block type=\"link\" onClick={()=>history.push('/account')} >create Acount</Button>\n    </LayoutLogin>\n}\n\nexport default  Login;","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Form, Input, Button} from 'antd';\nimport  {\n    handleEmail,\n    handlePassword,\n    selectLogin,\n} from './loginSlice';\nimport LayoutLogin from \"./components/layout-login\";\nimport {useHistory} from \"react-router\";\n\n\nconst CreateAccount = () => {\n    const history = useHistory();\n    const { email,password } = useSelector(selectLogin);\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        console.log('login',{ email,password });\n    },[])\n\n    // event\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log('send...')\n    }\n\n    return <LayoutLogin\n        handleSubmit={handleSubmit}\n        title='Create Account'\n    >\n        {/* email */}\n        <Form.Item\n            label=\"Email\"\n            name=\"email\"\n            rules={[{required: true,message: 'Please input your email!'},]}>\n            <Input\n                type='email'\n                placeholder='email...'\n                value={email}\n                onChange={e=>dispatch(handleEmail(e.target.value))}\n            />\n        </Form.Item>\n        <Button shape=\"round\" block type=\"primary\" htmlType=\"submit\" >CREARTE</Button>\n        <br/>\n        <Button block type=\"link\" onClick={()=>history.push('/')} >Return to login</Button>\n    </LayoutLogin>\n}\n\nexport default  CreateAccount;","import React from \"react\";\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport CreateAccount from \"./create-account\";\n\nconst LoginRouter = () => (\n    <Switch>\n        <Route path='/login' exact component={Login} />\n        <Route path='/account' exact component={CreateAccount} />\n        <Route path='/*'  component={()=><Redirect to='/login'  />} />\n    </Switch>\n);\n\nexport  default  LoginRouter;","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {selectSesion} from \"../login/loginSlice\";\nimport axios from \"axios\";\nimport {Button} from \"antd\";\n\nconst Home = () => {\n    const  sesion = useSelector(selectSesion);\n\n    const consultar = async () =>{\n        const resp = await axios.get('/api/user/'+sesion.id_account);\n        console.log('resp->',resp);\n    }\n    console.log('sesion->',sesion)\n    return (<>\n        <h3>Home page</h3>\n        <Button onClick={consultar} >Consultar</Button>\n    </>)\n}\n\nexport default  Home;","import React from \"react\";\nimport {\n    Switch,\n    Route,\n    Redirect\n} from \"react-router-dom\";\nimport Home from \"./home\";\n\nconst HomeRouter = () => (\n    <Switch>\n        <Route path='/home' exact component={Home} />\n        <Route path='/*' component={()=><Redirect to='/home'  />} />\n    </Switch>\n);\n\nexport  default  HomeRouter;","import React from \"react\";\nimport { Menu } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n} from '@ant-design/icons';\nimport '../layout-private.css';\n\nconst MenuPrivate = () => {\n\n    return (<Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n            <Menu.Item key=\"1\" icon={<UserOutlined />} >\n              nav 1\n            </Menu.Item>\n            <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n              nav 2\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n              nav 3\n            </Menu.Item>\n    </Menu>);\n}\n\nexport default  MenuPrivate;","import React from \"react\";\nimport { Layout } from 'antd';\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n} from '@ant-design/icons';\nconst { Header } = Layout;\n\n\nconst HeaderApp = ({\n    collapsed=false,\n    toggle=()=>{},\n}) => {\n\n    return(<Header className=\"site-layout-background\" style={{ padding: '3px 12px' }}>\n            {React.createElement(\n                collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n                {\n                  className: 'trigger',\n                  onClick: toggle,\n                })\n            }\n    </Header>);\n}\n\nexport  default  HeaderApp;","import React, {useState} from \"react\";\nimport { Layout } from 'antd';\nimport './layout-private.css';\nimport MenuPrivate from \"./Components/menu-private\";\nimport HeaderApp from \"../header-app/header-app\";\n\nconst { Sider, Content, Footer } = Layout;\n\n\nconst LayoutPrivate = ({\n    children=null\n}) => {\n    const [collapsed, setCollapsed] = useState(false);\n\n    const toggle = () => {\n        setCollapsed(!collapsed);\n    }\n\n    return (\n      <>\n        <Sider trigger={null} collapsible collapsed={collapsed}>\n            <div className=\"logo\" >\n                <h2 style={{color:'#FFF',margin:15}}>\n                    {!collapsed ? 'Company Spy' : 'CS'}\n                </h2>\n            </div>\n          <MenuPrivate />\n        </Sider>\n        <Layout className=\"site-layout\">\n            <HeaderApp\n                collapsed={collapsed}\n                toggle={toggle}\n            />\n          <Content\n            className=\"site-layout-background\"\n            style={{\n              margin: '24px 16px',\n              padding: 24,\n            }}\n          >\n              {children}\n          </Content>\n            <Footer style={{ textAlign: 'center' }}> Company SPY ©2021 </Footer>\n        </Layout>\n      </>\n    );\n}\n\nexport default  LayoutPrivate;","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport LoginRouter from \"../../features/login/login.router\";\nimport HomeRouter from \"../../features/home/home.router\";\nimport {useSelector} from \"react-redux\";\nimport {selectSesion} from \"../../features/login/loginSlice\";\nimport LayoutPrivate from \"../../components/layout-private/layout-private\";\n\n\nconst PrivateRoute = () => (\n    <Router>\n            <Switch>\n                <LayoutPrivate>\n                    <Route path='/' component={HomeRouter} />\n                </LayoutPrivate>\n            </Switch>\n    </Router>\n);\n\nconst PubicRoute = () => (\n    <Router>\n            <Switch>\n                <Route path='/' component={LoginRouter} />\n            </Switch>\n    </Router>\n);\n\n\nconst IndexRouter = () => {\n    const  sesion = useSelector(selectSesion);\n\n    return  sesion!==null ? <PrivateRoute /> : <PubicRoute />;\n}\n\nexport  default  IndexRouter;","import React from 'react';\nimport IndexRouter from \"./app/Routers/index.router\";\nimport {Layout} from \"antd\";\n\nfunction App() {\n  return (\n      <Layout style={{position:'absolute',left:0,right:0,bottom:0,top:0}}>\n          <IndexRouter />\n      </Layout>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport loginReducer from \"../features/login/loginSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    login:loginReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}